package pepse.world;

import danogl.collisions.GameObjectCollection;
import danogl.util.Vector2;
import pepse.Layers;
import pepse.world.trees.Tree;
import java.util.Random;
import java.util.function.Function;

/**
 * This class holds a Terrain and a Tree instances, which are generated by a given seed.
 * @author Ohad Klein, Ethan Glick
 */
public class World {
    private final int seed;
    private final int start;
    private final int end;
    private final GameObjectCollection gameObjects;
    private final Vector2 windowDimensions;
    private Terrain terrain;
    private Tree tree;

    /**
     * Constructor.
     * @param seed             A seed for a random number generator.
     * @param start            The start location of the world(on the x-axis).
     * @param end              The end location of the world(on the x-axis).
     * @param gameObjects      The collection of all participating game objects.
     * @param windowDimensions The dimensions of the windows.
     */
    public World(int seed, int start, int end,
                 GameObjectCollection gameObjects,
                 Vector2 windowDimensions) {
        this.seed = seed;
        this.start = start;
        this.end = end;
        this.gameObjects = gameObjects;
        this.windowDimensions = windowDimensions;
        InitializeWorld();
    }

    /**
     * Returns this World's Terrain object
     * */
    public Terrain getTerrain() {
        return this.terrain;
    }

    /**
     * Getter.
     * @return first x position of the world as determined from the terrain.
     */
    public int getFirstX() {
        return this.terrain.getFirstX();
    }

    /**
     * Getter.
     * @return last x position of the world as determined from the terrain.
     */
    public int getLastX() {
        return this.terrain.getLastX();
    }

    /**
     * Destroys the world's terrain and trees.
     */
    public void destroy() {
        this.terrain.destroy();
        this.tree.destroy();
    }

    /*
     * Initializes the world.
     */
    private void InitializeWorld() {
        this.terrain = new Terrain(this.gameObjects, Layers.TERRAIN_TOP.value,
                                    windowDimensions, this.seed);
        this.terrain.createInRange(this.start, this.end);
        Function<Integer, Float> groundHeightFunction = this.terrain::groundHeightAt;
        this.tree = new Tree(this.gameObjects, groundHeightFunction, this.seed);
        this.tree.createInRange(this.start, this.end);
    }

    /**
     * Returns random float between a and b.
     * Used in World class and classes which World depends on.
     * @param a      first float.
     * @param b      second float.
     * @param random the Random object to use.
     * @return  random float.
     */
    public static float randomBetween(float a, float b, Random random) {
        float diff = b - a;
        return a + random.nextFloat() * diff;
    }
}
